name: Run auto tests (yellow-pages-app) and Auto Merge to main

on:
  push:
    branches:
      - ray__staging

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Modify requirements.txt for testing
        run: |
          python modify_requirements.py remove

      - name: Install dependencies and activate virtual environment
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Debug information
        run: |
          which python
          python --version
          pip list
          pytest --version

      - name: Run tests
        run: |
          pytest -W ignore

      - name: Restore requirements.txt
        run: |
          python modify_requirements.py restore

      - name: Create Merge Request and Merge
        run: |
          # Create the merge request
          MR_RESPONSE=$(curl -X POST -H "Authorization: token ${{ secrets.AUTO_MERGE_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/pulls -d '{"title": "Automated MR from ray__staging to main", "head": "ray__staging", "base": "main"}')
          MR_NUMBER=$(echo $MR_RESPONSE | jq -r '.number')

          # Check if MR was successfully created
          if [ -z "$MR_NUMBER" ]; then
            echo "Failed to create Merge Request"
            exit 1
          fi

          # Merge the MR
          curl -X PUT -H "Authorization: token ${{ secrets.AUTO_MERGE_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/pulls/$MR_NUMBER/merge

      - name: Delete ray__staging branch
        run: |
          curl -X DELETE -H "Authorization: token ${{ secrets.AUTO_MERGE_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/git/refs/heads/ray__staging

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install python-dotenv

      - name: Modify requirements.txt for deployment
        run: |
          python modify_requirements.py remove

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku git:remote -a yellow-pages-profiler
          git push heroku main

      - name: Set Heroku environment variables
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          heroku config:set AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          heroku config:set AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          heroku config:set AWS_BUCKET_NAME=$AWS_BUCKET_NAME
          heroku config:set AWS_REGION=$AWS_REGION
